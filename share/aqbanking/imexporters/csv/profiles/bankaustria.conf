
char name="BankAustria"
char shortDescr="Profile for Bank Austria"
char longDescr="This profile supports the CSV format of Bank Austria"
int import="1"
int export="1"

char type="csv"
char groupNames="transaction", "transfer", "debitnote", "line"
char dateFormat="DD.MM.YYYY"
int utc="0"

# The following vars are used when there is an additional field within a
# record which defines the sign of the amount.
# Some banks use "C" (positive) and "D" (negative) or "Af" (negative) and
# "Bij" (positive)
int usePosNegField="0"
char posNegFieldName="posNeg"
#char positiveValues="Bij", "C"
#char negativeValues="Af", "D"
int defaultIsPositive="1"

int splitValueInOut="1"


# default is "float", other values: "rational"
char valueFormat="float"

params {
  # if 1 then values are quoted
  quote="1"
  
  # if 1 then a title line will be written containing the names of each
  # column
  title="1"
  
  # special values are "TAB" and "SPACE"
  delimiter=";" 
  
  # this is the group name looked for in the given data to GWEN_CSV_Write
  # if not given then all groups match
  #group="transaction"
  
  # this group contains the definition for each column
  # each variable in this group has its number as name
  # you can use index variables in the names (using square brackets)
  # the value of each of these variables is the name of a variable to be looked
  # up in the data given to GWEN_CSV_Write
  columns {
   1="field1" # Downloaddatum
   2="localAccountNumber"
   3="field3" # Kontowortlaut
   4="field4" # Kontowaehrung
   5="field5" # ValutaSaldo
   6="field6" # Disposaldo
   7="field7" # Kontostand
   8="date"
   9="valutaDate"
   10="value/currency"
   11="valueIn/value"
   12="valueOut/value"
   13="purpose[0]"
  } # columns

} # params

